# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    domain: '%env(DOMAIN)%'
    sns_access_key_id: '%env(SNS_ACCESS_KEY_ID)%'
    sns_region: '%env(SNS_REGION)%'
    sns_secret_access_key: '%env(SNS_SECRET_ACCESS_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory: '@lexik_maintenance.driver.factory'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Doctrine/'
            - '../src/Dto/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\TwigTimeZoneListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller_arguments }

    App\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        autoconfigure: false

    Sentry\Integration\IgnoreErrorsIntegration:
        arguments:
            $options:
                ignore_exceptions:
                    - App\Exception\ManagerException
                    - Lexik\Bundle\MaintenanceBundle\Exception\ServiceUnavailableException
                    - Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                    - Symfony\Component\Security\Core\Exception\AccessDeniedException

    Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider: ~

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
            - { db_table: 'session', db_id_col: 'sid', db_data_col: 'sdata', db_time_col: 'stime', db_lifetime_col: 'slifetime' }
